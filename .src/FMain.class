' Gambas class file

Public Trash_Dir As String = "~/.local/share/Trash"
Public Trash_Files As String = Trash_Dir &/ "files"
Public Trash_Info As String = Trash_Dir &/ "info"
Public QUELLDATEI As String
Public QUELLPFAD As String
Public QUELLE As String
Public ZIELDATEI As String
Public ZIELPFAD As String
Public ZIEL As String
Public sTDatei As String
Public lOrdner As String
Public rOrdner As String
Public dTimeDate As Date
Public iStandardfarbe As Integer = &HBFFFFF 'Standardfarbe
Public iHindergrund As Integer = &HDFF7FF   
Public iVordergrund As Integer
Public sEditfile As String
Public iLR As Integer = 0                   'linkes oder rechtes Feld zuletzt gewählt
Public bRand As Boolean                     'Ränder anzeigen ja oder nein
Static Public bBaum As Boolean              'Baum anzeigen
Public sLiebling1 As String                 'Favorit 1
Public sLiebling2 As String                 'Favorit 2


Public Sub Form_Open()
    ''das passiert nach Start
    Dim hFile As Stream
    Dim sLine1 As String
    Dim sLine2 As String
    Dim sLine3 As String
    Dim sLine4 As String
    Dim sLine5 As String
    Dim sLine6 As String
    Dim sLine7 As String
    Dim sLine8 As String
    Dim sLine9 As String
    Dim sLine10 As String
    Dim sLine11 As String

    ''Konfigurationsdatei wird automatisch angelegt
    If Exist("~/.lc_config.txt") = False Then Shell "touch ~/.lc_config.txt" Wait 
   
    ''hier wird geladen und in Variablen gefüllt
    hFile = Open "~/.lc_config.txt" For Read
    Line Input #hFile, sLine1   'Standardfarbe
    Line Input #hFile, sLine2   'Hintergrund
    Line Input #hFile, sLine3   'Vordergrund
    Line Input #hFile, sLine4   'TabStop
    Line Input #hFile, sLine5   'Vorschau
    Line Input #hFile, sLine6   'Listen
    Line Input #hFile, sLine7   'Fullscreen
    Line Input #hFile, sLine8   'Ränder
    Line Input #hFile, sLine9   'Verzeichnisbaum
    Line Input #hFile, sLine10  'Fav 1
    Line Input #hFile, sLine11  'Fav 2
    Wait 'Abwarten, damit alle Zeilen geladen sind, sonst stürzt scheinbar das Programm beim Aufbau ab!
    ''Laden Ende
    ' Zuweisungen
    If sLine1 = "" Then sLine1 = &HBFFFFF
    If sLine2 = "" Then sLine2 = &HDFF7FF
    If sLine3 = "" Then sLine3 = &H000000
    If sLine4 = "" Then sLine4 = "0"
    If sLine5 = "" Then sLine5 = "0"
    If sLine6 = "" Then sLine6 = "0"
    If sLine7 = "" Then sLine7 = "0"
    If sLine8 = "" Then sLine8 = "0"
    If sLine9 = "" Then sLine9 = "0"

    iStandardfarbe = sLine1
    iHindergrund = sLine2
    iVordergrund = sLine3
    Einstellungen.CheckBox1.Value = sLine4
    Einstellungen.CheckBox2.Value = sLine5
    Einstellungen.CheckBox3.Value = sLine6
    Einstellungen.CheckBox4.Value = sLine7
    Einstellungen.CheckBox5.Value = sLine8
    Einstellungen.CheckBox6.Value = sLine9
    sLiebling1 = sLine10
    sLiebling2 = sLine11

    If sLine4 = -1 Then TextBox1.NoTabFocus = False
    If sLine4 = -1 Then TextBox2.NoTabFocus = False
    If sLine5 = -1 Then FileView1.View = 3
    If sLine5 = -1 Then FileView2.View = 3
    If sLine6 = -1 Then FileView1.View = 1
    If sLine6 = -1 Then FileView2.View = 1
    If sLine6 = -1 Then FileView1.IconSize = 28
    If sLine6 = -1 Then FileView2.IconSize = 28
    If sLine7 = -1 Then FMain.Maximized = True
    If sLine8 = -1 Then bRand = -1 Else bRand = 0
    If sLine9 = -1 Then bBaum = -1 Else bBaum = 0
     Wait 'Abwarten, damit alle Zeilen geladen sind, sonst stürzt scheinbar das Programm beim Aufbau ab!

    Splitter1.Layout = [0, 48, 4, 48]
    Splitter3.Layout = [0, 3, 20, 3, 24, 24, 3, 20, 3]
    TextLabel1.Text = "Bereit für die Arbeit."
    Me.Background = iHindergrund
    Me.Foreground = iVordergrund
    FileView1.Background = iHindergrund
    FileView2.Background = iHindergrund
    FileView1.Foreground = iVordergrund
    FileView2.Foreground = iVordergrund
    FileView1.Dir = User.Home
    FileView2.Dir = User.Home
    lOrdner = FileView1.Dir
    rOrdner = FileView2.Dir
    Print lOrdner & "  |  " & rOrdner
    LCDLabel2.Text = Format(Date(Now), "dddd,dd,mm,yyyy")
    If FMain.iHindergrund = &H000000 Then
        LCDLabel2.Foreground = iVordergrund
        Button8.Foreground = iVordergrund
        Button9.Foreground = iVordergrund
    Endif 
    Menu2.Visible = False
    Menu15.Visible = False
    Menu63.Text = "Liebling 2: " & sLiebling2
    Menu62.Text = "Liebling 1: " & sLiebling1
    Wait 

    If Not Exist("/usr/share/applications/data-scp.desktop") Then Menu29.Visible = False
    If Not Exist("/usr/share/applications/data-backup.desktop") Then Menu30.Visible = False
    
    If bBaum = -1 Then
        Menu34.Checked = True
        Menu33.Visible = False
        Menu45.Visible = False
        'Menu19.Visible = False
        Button10.Enabled = False
    Endif 

    Funktionen.Spruch()
    NoBorder()
    Funktionen.Baum()
    
    If FMain.Maximized = True Then DirView1.Font.Grade = 2 Else DirView1.Font.Grade = 0 
    If FMain.Maximized = True Then FileView1.IconSize = 128 Else FileView1.IconSize = 64 
    If FMain.Maximized = True Then FileView2.IconSize = 128 Else FileView2.IconSize = 64 
    
End


Public Sub Menu5_Click()
    'speichern & beenden
    Me.Close
End

''____________________________________________
Public Sub NoBorder()
    ''Ränder ein- oder ausschalten
    If bRand = -1 Then 
        FileView1.Border = False 
        FileView2.Border = False
        DirView1.Border = False
        FileProperties1.Border = False
        PictureBox1.Border = 0
        TextArea1.Border = False 
        TextBox1.Border = False
        TextBox2.Border = False
        Splitter1.Border = False
        Splitter3.Border = False
        LCDLabel2.Border = False
    Endif
End

Public Sub InAction()
    'Funktionsanzeige, das etwas gerade in Arbeit ist
    Dim iTextfarbe As Integer
    Dim sTextnachricht As String
    
    If Spinner1.Visible = False Then 
        sTextnachricht = Label1.Text
        iTextfarbe = Label1.Foreground
        Spinner1.Visible = True 
        Spinner1.Start()
        Label1.Text = "Bitte warten! Dies kann eine Weile dauern, auch wenn sich die Anzeige scheinbar nicht bewegt."
        Label1.Foreground = &HFF003F
        Wait 1
    Else 
        Wait 1
        Spinner1.Stop()
        Spinner1.Visible = False
        Label1.Text = sTextnachricht
        Label1.Foreground = iTextfarbe
    Endif 
End


''###########################################################################################################################
Public Sub Loeschen()
    '' Löschfunktion in den Papierkorb
    'zuerst Test auf externes Medium
    Dim aPfadArray As String[]
    
    If iLR = 1 Then 
        If FileView1.Dir Begins "/media" &/ User.Name Then 
            aPfadArray = Split(FileView1.Dir, "/") 
            Try Trash_Dir = "/" & aPfadArray[1] &/ aPfadArray[2] &/ aPfadArray[3] &/ ".Trash-1000"
            Trash_Info = Trash_Dir &/ "info"
            Trash_Files = Trash_Dir &/ "files"
            Print Trash_Dir
            Print Trash_Info
            Print Trash_Files
        Endif 
        If FileView1.Dir Not Begins "/media" &/ User.Name Then 
            Trash_Dir = "~/.local/share/Trash"
            Trash_Info = Trash_Dir &/ "info"
            Trash_Files = Trash_Dir &/ "files"
            Print "Standardmülleimer links"
        Endif
    Endif  
    If iLR = 2 Then 
        If FileView2.Dir Begins "/media" &/ User.Name Then 
            aPfadArray = Split(FileView2.Dir, "/") 
            Try Trash_Dir = "/" & aPfadArray[1] &/ aPfadArray[2] &/ aPfadArray[3] &/ ".Trash-1000"
            Trash_Info = Trash_Dir &/ "info"
            Trash_Files = Trash_Dir &/ "files"
            Print Trash_Dir
            Print Trash_Info
            Print Trash_Files
        Endif 
        If FileView2.Dir Not Begins "/media" &/ User.Name Then 
            Trash_Dir = "~/.local/share/Trash"
            Trash_Info = Trash_Dir &/ "info"
            Trash_Files = Trash_Dir &/ "files"
            Print "Standardmülleimer rechts"
        Endif 
    Endif
        If Not Exist(Trash_Dir) Then Mkdir Trash_Dir
        If Not Exist(Trash_Info) Then Mkdir Trash_Info
        If Not Exist(Trash_Files) Then Mkdir Trash_Files
        create_trashinfo
        move_totrash
        If Error Then TextLabel1.Text = "Das hat nicht funktioniert." 
End

Public Sub create_trashinfo()
    'Trashinfo-Datei erstellen
    Dim Info As String = "[Trash Info]"
    Dim Pfad As String
    Dim deletion_date As String
    Dim dDate As Date
    Dim iZahl As Integer = 1
   
    sTDatei = QUELLDATEI

    dDate = Now()
    deletion_date = "DeletionDate=" & Format$(dDate, "yyyy-mm-ddThh:nn:ss")
    Pfad = "Path=" & QUELLPFAD &/ QUELLDATEI

    If sTDatei = "" Then
        Message("Fehler, nichts ausgewählt.", "OK")
    Else If Exist(Trash_Info &/ sTDatei & ".trashinfo") Then 
            While Exist(Trash_Info &/ sTDatei & ".trashinfo")
                iZahl += 1
                sTDatei = QUELLDATEI & "." & iZahl
                'Print sTDatei & "   ist die Trashinfodatei"
            Wend 
            Print "Gleichnamige Datei existiert schon. Es wurde eine fortlaufende Nummer an die Trash-Info angefügt."
            Try File.Save(Trash_Info &/ sTDatei & ".trashinfo", Info & gb.NewLine & Pfad & gb.NewLine & deletion_date)
            If Error Then Message("Es ist ein Fehler aufgetreten.", "OK")
    Else 
        Print "Trash-Info der Datei wurde angelegt."
        Try File.Save(Trash_Info &/ sTDatei & ".trashinfo", Info & gb.NewLine & Pfad & gb.NewLine & deletion_date)
    Endif
End

Public Sub move_totrash()
    'Ab in den Papierkorb verschieben
    'Dim iZahl As Integer = 1
    
    If sTDatei = "" Then 
        TextLabel1.Text = "Keine Datei ausgewählt."
    Else If Exist(Trash_Files &/ sTDatei) Then
        TextLabel1.Text = "Fehler: Datei existiert schon unter " & Trash_Files & " !" 
    Else 
        Print "Datei wurde in den Papierkorb verschoben."
        Try Move QUELLPFAD &/ QUELLDATEI To Trash_Files &/ sTDatei
        If Error Then Message("Es ist ein Fehler aufgetreten", "OK")
        TextLabel1.Text = "Das Element → " & QUELLDATEI & " ← wurde in den Papierkorb verschoben!"
    Endif 
End
''#############################################################################################################################
''-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Public Sub Kopieren()
    ''Kopierfunktion mit den Testroutinen
    ' Alle Dateien kopieren
    Dim i As Integer
    'Dim x As String
    InAction()
    Print iLR
    If iLR = 1 Then QUELLPFAD = FileView1.Dir
    If iLR = 2 Then QUELLPFAD = FileView2.Dir
    
    If iLR = 1 Then 
       If FileView1.Selection.Count > 1 Then 
            For i = 0 To FileView1.Selection.Count - 1
                Print i
                Print FileView1.Selection[i]
                QUELLE = QUELLPFAD &/ FileView1.Selection[i]
                Print QUELLE & " MEHRERE DATEN"
                If QUELLE = ZIEL Then TextLabel1.Text = "Fehler, kann nicht auf sich selbst kopieren."
                If Error Then TextLabel1.Text = "Sind die selbe Datei."
                If IsDir(QUELLE) = True Then Shell "cp -r " & Shell(QUELLE) & " " & Shell(ZIEL) Wait
                If Error Then TextLabel1.Text = "Kopie Ordner fehlgeschlagen."
                If IsDir(QUELLE) = False Then Shell "cp " & Shell(QUELLE) & " " & Shell(ZIEL) Wait
                If Error Then TextLabel1.Text = "Kopie Datei fehlgeschlagen." 
                TextLabel1.Text = QUELLE & " <=> wurde kopiert."
                If Error Then TextLabel1.Text = "Das funktioniert nicht."
                Wait 0.1
            Next
                FileView1.Reload
                'Print "neu geladen"
            Else 
            'Standardfunktion
             Print QUELLE & " - EINZEL DATEI"
             If QUELLE = ZIEL Then TextLabel1.Text = "Fehler, kann nicht auf sich selbst kopieren."
             If IsDir(QUELLE) = True Then Shell "cp -r " & Shell(QUELLE) & " " & Shell(ZIEL) Wait Else Shell "cp " & Shell(QUELLE) & " " & Shell(ZIEL) Wait 
             If QUELLE = "" Then QUELLE = "NICHTS"
             TextLabel1.Text = QUELLE & " <=> wurde kopiert."
             If Error Then TextLabel1.Text = "Das funktioniert nicht."
        Endif 
    Endif 
    If iLR = 2 Then 
       If FileView2.Selection.Count > 1 Then 
            For i = 0 To FileView2.Selection.Count - 1
                Print i
                Print FileView2.Selection[i]
                QUELLE = QUELLPFAD &/ FileView2.Selection[i]
                Print QUELLE & " MEHRERE DATEN"
                If QUELLE = ZIEL Then TextLabel1.Text = "Fehler, kann nicht auf sich selbst kopieren."
                If IsDir(QUELLE) = True Then Shell "cp -r " & Shell(QUELLE) & " " & Shell(ZIEL) Wait
                If IsDir(QUELLE) = False Then Shell "cp " & Shell(QUELLE) & " " & Shell(ZIEL) Wait 
                TextLabel1.Text = QUELLE & " <=> wurde kopiert."
                If Error Then TextLabel1.Text = "Das funktioniert nicht."
                Wait 0.1
            Next
                FileView2.Reload
            Else 
            'Standardfunktion
             Print QUELLE & " - EINZEL DATEI"
             If QUELLE = ZIEL Then TextLabel1.Text = "Fehler, kann nicht auf sich selbst kopieren."
             If IsDir(QUELLE) = True Then Shell "cp -r " & Shell(QUELLE) & " " & Shell(ZIEL) Wait Else Shell "cp " & Shell(QUELLE) & " " & Shell(ZIEL) Wait 
             If QUELLE = "" Then QUELLE = "NICHTS"
             TextLabel1.Text = QUELLE & " <=> wurde kopiert."
             If Error Then TextLabel1.Text = "Das funktioniert nicht."
        Endif 
    Endif 
    InAction()
End
'' --------------------------------------------------------------------------------------------------------------------------------------------------------------------

'' Feldfunktionen hier machen -------------------------
Public Sub FileView2_DblClick()
 '' was bei Doppelklick passiert
    Dim sPfad As String
    'lOrdner = FileView1.Dir
    'Print FileView2.Path
    Print "Doppelklick Feld rechts"
    sPfad = FileView2.Path
    Print IsDir(sPfad) 
    If IsDir(sPfad) = True Then FileView2.Dir = FileView2.Path Else Try Desktop.Open(FileView2.Path)
    'FileView2.Reload
    TextLabel3.Text = FileView2.Dir
    TextBox2.Text = FileView2.Current
    Menu37.Enabled = False
End

Public Sub FileView1_DblClick()
    '' was bei Doppelklick passiert
    Dim sPfad As String
    'lOrdner = FileView1.Dir
    'Print FileView1.Path
    Print "Doppelklick Feld links"
    sPfad = FileView1.Path
    'If sPfad = "" Then FileView1.Dir = User.Home
    'If sPfad = "" Then sPfad = User.Home
    Print IsDir(sPfad) 
    Print sPfad
    If IsDir(sPfad) = True Then FileView1.Dir = FileView1.Path Else Try Desktop.Open(FileView1.Path)
    'FileView1.Reload
    TextLabel4.Text = FileView1.Dir
    TextBox1.Text = FileView1.Current
    Menu17.Enabled = False
    'FileView1.Reload    
    'If Menu33.Checked = True Then Desktop.Open(FileView1.Path)
    DirView1.Current = FileView1.Dir
End

Public Sub FileView1_Click()
    'Auswahl bei Klick
    Print "Klick links"
    iLR = 1
    QUELLE = FileView1.Path
    QUELLDATEI = FileView1.Current
    ZIEL = FileView2.Dir
    ZIELPFAD = FileView2.Dir
    
    TextLabel4.Text = FileView1.Dir
    TextBox1.Text = FileView1.Current
    FileView1.Refresh
    Wait 

End

Public Sub FileView2_Click()
    'Auswahl bei Klick
    Print "Klick rechts"
    iLR = 2
    QUELLE = FileView2.Path
    QUELLDATEI = FileView2.Current
    ZIEL = FileView1.Dir
    ZIELPFAD = FileView1.Dir
    
    TextLabel3.Text = FileView2.Dir
    TextBox2.Text = FileView2.Current
    FileView2.Refresh
    Wait 
End

Public Sub FileView1_LostFocus()
    'Farbe bei Focus-Verlust zurücksetzen
    FileView1.Background = iHindergrund
    FileView1.Foreground = iVordergrund
    TextBox1.Background = iHindergrund
End

Public Sub FileView2_LostFocus()
    'Farbe bei Focus-Verlust zurücksetzen
    FileView2.Background = iHindergrund
    FileView2.Foreground = iVordergrund
    TextBox2.Background = iHindergrund
End

Public Sub FileView1_Select()
    ''Anzeige bei Auswahl im Feld links - was soll dargestellt werden
    Print FileView1.Current
    iLR = 1
    QUELLE = FileView1.Path
    QUELLDATEI = FileView1.Current
    ZIEL = FileView2.Dir
    ZIELPFAD = FileView2.Dir
    TextLabel4.Text = FileView1.Dir
    TextBox1.Text = FileView1.Current
    
    If FileView1.HasFocus Then TextBox1.Foreground = &HFF003F Else TextBox1.Foreground = &H000000
    
    DirView1.Current = FileView1.Dir
    
    FileProperties1.Path = FileView1.Path
    If Menu33.Checked = True Then Try PictureBox1.Picture = Picture.Load(FileView1.Path) Else PictureBox1.Picture = Null
    If Error Then Return 

End

Public Sub FileView2_Select()
    ''Anzeige bei Auswahl im Feld rechts
    Print FileView2.Current
    iLR = 2
    QUELLE = FileView2.Path
    QUELLDATEI = FileView2.Current
    ZIEL = FileView1.Dir
    ZIELPFAD = FileView1.Dir
    TextLabel3.Text = FileView2.Dir
    TextBox2.Text = FileView2.Current
    
    If FileView2.HasFocus Then TextBox2.Foreground = &HFF003F Else TextBox2.Foreground = &H000000
End

Public Sub FileView1_GotFocus()
    ' Farbe bei Focus ändern
    FileView1.Background = iStandardfarbe
    FileView1.Foreground = iVordergrund
    TextBox1.Background = &HFFFFBF
   
    FileView2.UnselectAll
    Menu37.Enabled = False
    ZIEL = FileView2.Dir
    Print ZIEL & " Fokus links - rechtes Feld Ziel"
    
End

Public Sub FileView2_GotFocus()
    ' Farbe bei Focus ändern
    FileView2.Background = iStandardfarbe
    FileView2.Foreground = iVordergrund
    TextBox2.Background = &HFFFFBF
    
    FileView1.UnselectAll
    Menu17.Enabled = False
    ZIEL = FileView1.Dir
    Print ZIEL & " Fokus rechts - linkes Feld Ziel"
End


'' Sonstiges hierher --------------------------------
Public Sub LCDLabel2_Leave()
    'Datum wieder anzeigen
    LCDLabel2.Text = Format(Date(Now), "dddd,dd,mm,yyyy")
    Zeitfenster.Close
End

Public Sub LCDLabel2_Enter()
    'Uhrzeit zeigen beim Überfahren
    LCDLabel2.Text = Format(Time(Now), "hh:nn") & " Uhr"
    Zeitfenster.LCDLabel1.Background = iHindergrund
    Zeitfenster.ShowModal
End


'' hier kommen Menü und Knöpfe hin -------------------------------------
Public Sub Button1_Click()
    'zurück zu Home - Button links
    FileView1.Dir = lOrdner
    DirView1.Current = User.Home
    DirView1.Reload
    Print lOrdner
    TextLabel4.Text = FileView1.Dir
    FileView1.Current = ""
    TextBox1.Text = FileView1.Current
    TextLabel1.Text = "Home"
    Menu17.Enabled = False
    
    QUELLE = ""
End

Public Sub Button2_Click()
    'zurück zu Home - Button rechts
    FileView2.Dir = rOrdner
    Print rOrdner
    TextLabel3.Text = FileView2.Dir
    FileView2.Current = ""
    TextBox2.Text = FileView2.Current
    TextLabel1.Text = "Home"
    Menu37.Enabled = False
    
    QUELLE = ""
End

Public Sub Button6_Click()
    'Umbenennen - F8
    Dim Farbe As Integer
    Farbe = TextLabel1.Foreground
    Print Farbe
    
    If iLR = 1 Then 
        sEditfile = FileView1.Current
        FileView1.SetFocus
        FileView1.Rename
        TextLabel1.Foreground = 0
        TextLabel1.Text = "Umbenennen und mit Enter bestätigen."
        If sEditfile = "" Then TextLabel1.Text = "Datei/Ordner vorher mit der Maus auswählen, dann klappt auch das Umbenennen."
        If sEditfile = "" Then TextLabel1.Foreground = 16711680
        Wait 2
        TextLabel1.Foreground = iVordergrund
        TextLabel1.Refresh
    Endif

    If iLR = 2 Then 
        sEditfile = FileView2.Current
        FileView2.SetFocus
        FileView2.Rename
        TextLabel1.Foreground = 0
        TextLabel1.Text = "Umbenennen und mit Enter bestätigen."
        If sEditfile = "" Then TextLabel1.Text = "Datei/Ordner vorher mit der Maus auswählen, dann klappt auch das Umbenennen."
        If sEditfile = "" Then TextLabel1.Foreground = 16711680
        Wait 2
        TextLabel1.Foreground = iVordergrund
        TextLabel1.Refresh
    Endif 
End

Public Sub Button7_Click()
    'neuer Ordner erstellen - F7
    If iLR = 1 Then 
        If Not Exist(FileView1.Dir &/ "Neuer Ordner") Then
            Mkdir FileView1.Dir &/ "Neuer Ordner"
            TextLabel1.text = "Ordner wurde angelegt."
            FileView1.Reload 
            FileView1.SetFocus
        Else 
            TextLabel1.text = "Ordner existiert bereits. Zum Umbenennen den Ordner vorher mit der Maus auswählen."
            FileView1.SetFocus
            FileView1.Current = "Neuer Ordner"
        Endif 
    Endif 
    If iLR = 2 Then 
        If Not Exist(FileView2.Dir &/ "Neuer Ordner") Then
            Mkdir FileView2.Dir &/ "Neuer Ordner"
            TextLabel1.text = "Ordner wurde angelegt."
            FileView2.Reload
            FileView2.SetFocus
        Else 
            TextLabel1.text = "Ordner existiert bereits. Zum Umbenennen den Ordner vorher mit der Maus auswählen."
            FileView2.SetFocus
            FileView2.Current = "Neuer Ordner"
        Endif 
    Endif 
End

Public Sub Button5_Click()
    'löschen Knopf
    If iLR = 1 Then 
       Menu16_Click()
    Endif 
    
    If iLR = 2 Then
       Menu46_Click()
    Endif 
End

Public Sub Menu11_Click()
    'rechts vergrößern
    FileView2.IconSize = FileView2.IconSize * 2
End

Public Sub Menu12_Click()
    '' alle Dateien auswählen >>> rechte Seite
    If FileView2.Dir = User.Home Then FileView2.UnselectAll
    If FileView2.Dir = User.Home Then Menu37.Enabled = False
    If FileView2.Dir <> User.Home Then FileView2.SelectAll
    If FileView2.Dir <> User.Home Then Menu37.Enabled = True
End

Public Sub Menu13_Click()
    'rechts verkleinern
    FileView2.IconSize = FileView2.IconSize / 2
End

Public Sub Menu14_Click()
  'Ansicht Aktualisieren
  FileView1.Reload
  FileView2.Reload
  DirView1.Reload
End

Public Sub Menu18_Click()
  '' alle Dateien auswählen >>> linke Seite
  If FileView1.Dir = User.Home Then FileView1.UnselectAll
  If FileView1.Dir = User.Home Then Menu17.Enabled = False
  If FileView1.Dir <> User.Home Then FileView1.SelectAll
  If FileView1.Dir <> User.Home Then Menu17.Enabled = True
End

Public Sub Menu16_Click()
    'Datei(en) links löschen
    Dim i As Integer
    'mehrere Dateien löschen
    If FileView1.Selection.Count > 1 Then 
        For i = 0 To FileView1.Selection.Count - 1
            Print i
            Print FileView1.Selection[i]
            QUELLPFAD = FileView1.Dir
            QUELLDATEI = FileView1.Selection[i]
            Print QUELLDATEI & "  " & QUELLPFAD
            Try Loeschen 
            Wait 0.5
        Next
    Else 
    'eine Datei löschen
        QUELLPFAD = FileView1.Dir
        QUELLDATEI = FileView1.Current
        Try Loeschen
        Print "Es würde gelöscht werden!"
    Endif 
    TextBox1.Text = ""
    FileView1.Reload
    FileView2.Reload
End

Public Sub Menu17_Click()
    '' Alle Dateien in den Papierkorb löschen >>> Linke Seite FileView1
    Dim i As Integer
    If FileView1.Dir = User.Home Then Print "Fehler: Auswahl im Home-Ordner nicht erlaubt."
    If FileView1.Selected = True Then
        If FileView1.Dir <> User.Home Then
            Print "Auswahl erlaubt, da nicht im Home-Ordner."
            FileView1.SelectAll
            For i = 0 To FileView1.Count - 1
            Print i
            Print FileView1.Selection[i]
            QUELLPFAD = FileView1.Dir
            QUELLDATEI = FileView1.Selection[i]
            Print QUELLDATEI
            Try Loeschen
            If Error Then Message("Es ist ein Fehler aufgetreten!")
        Next
            FileView1.Reload
            Menu17.Enabled = False
        Endif
    Else
        Menu17.Enabled = False 
    Endif

End

Public Sub Menu8_Click()
  'versteckte Dateien anzeigen
  If Menu8.Checked = True Then FileView1.ShowHidden = True Else FileView1.ShowHidden = False
  If Menu8.Checked = True Then FileView2.ShowHidden = True Else FileView2.ShowHidden = False
End

Public Sub Menu6_Click()
    'Einstellungsmenü
    Einstellungen.Show
End

Public Sub Menu22_Click()
    ' Kompakte Ansicht
    FileView1.View = 1
    FileView1.IconSize = 22
End

Public Sub Menu23_Click()
    'Detail Ansicht
    FileView1.View = 2
End

Public Sub Menu25_Click()
    'Normale Ansicht
    FileView2.View = 0
End

Public Sub Menu26_Click()
    'Kompakte Ansicht
    FileView2.View = 1
    FileView2.IconSize = 22
End

Public Sub Menu27_Click()
    'Detail Ansicht
    FileView2.View = 2
End

Public Sub Menu29_Click()
    'Data-SCP
    Exec ["data-scp"] Wait 
End

Public Sub Menu30_Click()
    'Taschenrechner
    Exec ["gnome-calculator"] Wait 
End


Public Sub Menu33_Click()
    'Bildvorschau
    If Menu33.Checked = True Then Splitter1.Layout = [0, 20, 4, 76] Else Splitter1.Layout = [0, 48, 4, 48]
    If Menu33.Checked = True Then Menu19.Visible = False Else Menu19.Visible = True
    If Menu33.Checked = True Then Menu34.Visible = False Else Menu34.Visible = True
    If Menu33.Checked = True Then FileView2.Visible = False Else FileView2.Visible = True
    If Menu33.Checked = True Then PictureBox1.Visible = True Else PictureBox1.Visible = False
    If Menu33.Checked = True Then FileView1.Filter = ["*.png", "*.bmp", "*.jpg"] Else FileView1.Filter = Null
    If Menu33.Checked = True Then FileView1.ShowDirectory = False Else FileView1.ShowDirectory = True
    If Menu33.Checked = True Then Menu45.Visible = False Else Menu45.Visible = True
    PictureBox1.Mode = 3    'Ansichtsgröße auf Bildfenster angepasst
End

Public Sub Menu19_Click()
    ''Details rechts anzeigen
    Dim hFont As Font
    hFont = Font[", Bold,12"]
    FileProperties1.Font = hFont
    If Menu19.Checked = True Then Menu33.Visible = False Else Menu33.Visible = True
    'If Menu19.Checked = True Then Menu34.Visible = False Else Menu34.Visible = True
    If Menu19.Checked = True Then FileView2.Visible = False Else FileView2.Visible = True 
    If Menu19.Checked = True Then FileProperties1.Visible = True Else FileProperties1.Visible = False
    If Menu19.Checked = True Then Menu45.Visible = False Else Menu45.Visible = True
    If Menu34.Checked = True Then Menu33.Visible = False
    If FMain.Maximized = False Then FileProperties1.Font.Size = 10
End

Public Sub Menu34_Click()
    ''Baum anzeigen
    Dim hFont As Font
    hFont = Font[", Bold,11"]
    DirView1.Font = hFont
    DirView1.Background = iHindergrund
    DirView1.Current = FileView1.Dir
    If Menu34.Checked = True Then Splitter1.Layout = [18, 50, 4, 30] Else Splitter1.Layout = [0, 48, 4, 48]
    If Menu34.Checked = True Then Menu33.Visible = False Else Menu33.Visible = True
    'If Menu34.Checked = True Then Menu19.Visible = False Else Menu19.Visible = True
    If Menu34.Checked = True Then Splitter3.Layout = [18, 3, 22, 3, 24, 13, 3, 13, 3] Else Splitter3.Layout = [0, 3, 20, 3, 24, 24, 3, 20, 3]
    If Menu34.Checked = True Then DirView1.Visible = True Else DirView1.Visible = False
    If Menu34.Checked = True Then Menu45.Visible = False Else Menu45.Visible = True
    If Menu34.Checked = True Then Button10.Enabled = False Else Button10.Enabled = True
    If Menu19.Checked = True Then Menu19.Checked = False
    If FMain.Maximized = True Then DirView1.Font.Grade = 2
End


Public Sub DirView1_Select()
    'Pfad im Baum auswählen und anzeigen
    FileView1.Dir = DirView1.Current
End

Public Sub Menu20_Click()
    'Icons vergrößern
    FileView1.IconSize = FileView1.IconSize * 2 
    FileView2.IconSize = FileView2.IconSize * 2
    Print FileView1.IconSize 
End

Public Sub Menu24_Click()
    'Icons verkleinern
    FileView1.IconSize = FileView1.IconSize / 2 
    FileView2.IconSize = FileView2.IconSize / 2
    Print FileView1.IconSize 
End

Public Sub Menu21_Click()
    'normale Ansicht
    FileView1.View = 0
End

Public Sub Button3_Click()
    ' Kopieren über Knopf - F5
    Kopieren()
    Wait 
    'Ansicht Aktualisieren
    FileView2.Reload
    FileView1.Reload
End

''<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
Public Sub Button4_Click()
    ''Verschiebefunktion mit den Testroutinen für die jeweilige Seite
    Dim i As Integer
    
    If iLR = 1 Then QUELLPFAD = FileView1.Dir 'links
    If iLR = 2 Then QUELLPFAD = FileView2.Dir 'rechts
    InAction()
    'Verschieben von mehreren Dateien 
    If iLR = 1 Then                                                                  'linke Auswahl nach rechts verschieben
        If FileView1.Selection.Count > 1 Then 
            For i = 0 To FileView1.Selection.Count - 1
                Print i
                Print FileView1.Selection[i]
                QUELLE = QUELLPFAD &/ FileView1.Selection[i]
                Print QUELLE & " MEHRERE DATEN"
                If Not Exist(ZIEL &/ FileView1.Selection[i]) Then 
                    Funktionen.Verschieben()
                    TextLabel1.Text = Funktionen.sInfotext
                    Wait 0.3
                    FileView2.Reload
                Else 
                    TextLabel1.Text = "Die Datei " & FileView1.Selection[i] & " existiert schon und wird nicht verschoben."
                    Wait 1
                Endif
            Next
        Else 
            'Standardfunktion für einzelne Datei/Ordner
            Print QUELLE & " - EINZEL DATEI"
            Print ZIEL
            If Not Exist(ZIEL &/ FileView1.Current) Then 
                Funktionen.Verschieben
                TextLabel1.Text = Funktionen.sInfotext
                FileView2.Reload
            Else
                TextLabel1.Text = "Fehler, die Datei " & QUELLE & " existiert schon und wird nicht verschoben."
            Endif 
            If QUELLE = "" Then TextLabel1.Text = "Das funktioniert nicht."
        Endif 
        FileView1.Reload
    Endif 
    'Verschieben von mehreren Dateien 
    If iLR = 2 Then                                                             'rechte Auswahl nach links verschieben
       If FileView2.Selection.Count > 1 Then 
            For i = 0 To FileView2.Selection.Count - 1
                Print i
                Print FileView2.Selection[i]
                QUELLE = QUELLPFAD &/ FileView2.Selection[i]
                Print QUELLE & " MEHRERE DATEN"
                If Not Exist(ZIEL &/ FileView2.Selection[i]) Then 
                    Funktionen.Verschieben()
                    TextLabel1.Text = Funktionen.sInfotext
                    Wait 0.3
                    FileView1.Reload
                Else 
                    TextLabel1.Text = "Die Datei " & FileView2.Selection[i] & " existiert schon und wird nicht verschoben."
                    Wait 1
                Endif
            Next
        Else 
            'Standardfunktion für einzelne Datei/Ordner
            Print QUELLE & " - EINZEL DATEI"
            Print ZIEL
            If Not Exist(ZIEL &/ FileView2.Current) Then 
                Funktionen.Verschieben
                TextLabel1.Text = Funktionen.sInfotext
                FileView1.Reload
            Else
                TextLabel1.Text = "Fehler, die Datei " & QUELLE & " existiert schon und wird nicht verschoben."
            Endif 
            If QUELLE = "" Then TextLabel1.Text = "Nix ausgewählt - das funktioniert nicht."
        Endif 
        FileView2.Reload
    Endif
    InAction()
End
''<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

Public Sub Menu36_Click()
    'links vergrößern
    FileView1.IconSize = FileView1.IconSize * 2
End

Public Sub Menu37_Click()
    '' Alle Dateien in den Papierkorb löschen >>> Rechte Seite FileView2
    Dim i As Integer
    If FileView2.Dir = User.Home Then Print "Fehler: Auswahl im Home-Ordner nicht erlaubt."
    If FileView2.Selected = True Then
        If FileView2.Dir <> User.Home Then
        Print "Auswahl erlaubt, da nicht im Home-Ordner."
            FileView2.SelectAll
            For i = 0 To FileView2.Count - 1
            Print i
            Print FileView2.Selection[i]
            QUELLPFAD = FileView2.Dir
            QUELLDATEI = FileView2.Selection[i]
            Print QUELLDATEI
            Try Loeschen
            Print "GELÖSCHT !!!"
            If Error Then Message("Es ist ein Fehler aufgetreten!")
        Next
            FileView2.Reload
            Menu37.Enabled = False
        Endif
    Else 
        Menu37.Enabled = False
    Endif 
End

Public Sub Button8_Click()
     'ein Ordner Zurück - Button links
    Dim Zeile As String
    Dim Liste As String[]
    Dim Wort As String

    Zeile = FileView1.Dir
    TextLabel1.Text = "Zurück"

    If Zeile <> User.Home Then
        Print Zeile
        Liste = Split(Zeile, "/")
        For Each Wort In Liste
            Print (Wort)
        Next
        Print
        Print Liste.Last
        'Zeile = Replace(Zeile, Liste.Last, "")
        Zeile = Left(Zeile, Zeile.Len - Liste.Last.Len)
        Zeile = Left(Zeile, Zeile.Len - 1)
        Print Zeile
        FileView1.Dir = Zeile
    Endif
    If Zeile = "" Then FileView1.Dir = User.Home
     
    Menu17.Enabled = False
    TextLabel4.Text = FileView1.Dir
    FileView1.Current = ""
    TextBox1.Text = FileView1.Current
    QUELLE = ""
    DirView1.Current = FileView1.Dir
End

Public Sub Button9_Click()
   'ein Ordner Zurück - Button rechts
    Dim Zeile As String
    Dim Liste As String[]
    Dim Wort As String
        
    Zeile = FileView2.Dir
    TextLabel1.Text = "Zurück"
       
    If Zeile <> User.Home Then
        Print Zeile
        Liste = Split(Zeile, "/")
        For Each Wort In Liste
            Print (Wort)
        Next
        Print
        Print Liste.Last
        'Zeile = Replace(Zeile, Liste.Last, "")
        Zeile = Left(Zeile, Zeile.Len - Liste.Last.Len)
        Zeile = Left(Zeile, Zeile.Len - 1)
        Print Zeile
        FileView2.Dir = Zeile
    Endif 
    If Zeile = "" Then FileView2.Dir = User.Home
    
    Menu37.Enabled = False
    TextLabel3.Text = FileView2.Dir
    FileView2.Current = ""
    TextBox2.Text = FileView2.Current
    QUELLE = ""
End

Public Sub Menu41_Click()
    ' F5 - Kopieren
    Button3_Click
End

Public Sub Menu40_Click()
    ' F6 - Verschieben
    Button4_Click
End

Public Sub Menu39_Click()
    ' F7 - Ordner erstellen
    Button7_Click
End

Public Sub Menu38_Click()
    ' F8 - Umbenennen
    Button6_Click
End

Public Sub Menu35_Click()
    ' Element Löschen in Papierkorb
    Button5_Click
End

Public Sub Menu42_Click()
    'Vorschau Ansicht
    FileView1.View = 3
End

Public Sub Menu43_Click()
    'Vorschau Ansicht
    FileView2.View = 3
End

Public Sub Menu44_Click()
    'Papierkorb anzeigen zum Leeren oder Wiederherstellen
    'Shell "nemo trash:///"
    Desktop.UsePortal = False
    Desktop.Open("trash:///")
End

Public Sub Menu9_Click()
    'eigentliche Hilfefunktion
    Hilfe.ShowModal
End

Public Sub Menu10_Click()
    'Versionsinfo = V
    Funktionen.Spruch()
    TextLabel1.Font.Bold = True
    TextLabel1.Background = &HFFFF00
    TextLabel1.Foreground = &H0000FF
    TextLabel1.Text = "L-Commander Version:  " & Application.Version & "  -   Besuchen Sie die Seite openyourlinux.de für Neuigkeiten."
    Wait 2
    TextLabel1.Background = -1
    TextLabel1.Foreground = -1
    TextLabel1.Font.Bold = False
    TextLabel1.Text = "Bereit für die Arbeit."
End

Public Sub Menu45_Click()
    'Schriftvorschau
    Dim sBeispieltext As String 

    If Menu45.Checked = True Then Menu33.Visible = False Else Menu33.Visible = True
    If Menu45.Checked = True Then Menu19.Visible = False Else Menu19.Visible = True
    If Menu45.Checked = True Then Menu34.Visible = False Else Menu34.Visible = True
    If Menu45.Checked = True Then FileView2.Visible = False Else FileView2.Visible = True 
    If Menu45.Checked = True Then TextArea1.Visible = True Else TextArea1.Visible = False
    If Menu45.Checked = True Then FileView1.Filter = ["*.ttf", "*.otf", "*.woff", "*.eot"] Else FileView1.Filter = Null
    If Menu45.Checked = True Then FontBox1.Visible = True Else FontBox1.Visible = False
    If Menu45.Checked = True Then Menu48.Visible = True Else Menu48.Visible = False
    If Menu45.Checked = True Then Menu18.Visible = False Else Menu18.Visible = True
    If Menu45.Checked = True Then Menu17.Visible = False Else Menu17.Visible = True

    sBeispieltext = "Dieser Text soll die gewählte Schriftart abbilden.\n\n Für eine Beurteilung, ob der Font für die gewünschte Verwendung \n geeignet ist, müsste man diesen in einem Text lesen können.\n So wie hier dargestellt.\n Es folgen noch ein paar Buchstaben, Zahlen und Sonderzeichen.\n\n\n A B C D E F G H I J K L M N O P Q R S T U V W X Y Z Ä Ö Ü \n a b c d e f g h i j k l m n o p q r s t u v w x y z ä ö ü \n + - * / ß , . ; : _ ^ ° ! § $ % & ( ) = ? ` ´ #\n\n\nFür eine andere Schriftart wählen Sie aus der\nunteren Schriftauswahlbox die entsprechenden Parameter aus.\n\nFinden Sie in der linken Liste neue Schriftarten\nso können Sie diese über das Kontextmenü lokal installieren."

    TextArea1.Text = sBeispieltext
End

Public Sub FontBox1_Click()
    'Schriftart auswählen
    Dim hFont As Font
    Dim xTest As String
    
    hFont = Font[FontBox1.Value]
    xTest = FontBox1.Value
    Print xTest
    TextArea1.Font = hFont
    TextArea1.Refresh
End

Public Sub Menu47_Click()
    'links verkleinern
    FileView1.IconSize = FileView1.IconSize / 2
End

Public Sub Menu46_Click()
    'Datei(en) rechts löschen
    Dim i As Integer
    'mehrere Dateien löschen
    If FileView2.Selection.Count > 1 Then 
        For i = 0 To FileView2.Selection.Count - 1
            Print i
            Print FileView2.Selection[i]
            QUELLPFAD = FileView2.Dir
            QUELLDATEI = FileView2.Selection[i]
            Print QUELLDATEI & "  " & QUELLPFAD
            Try Loeschen 
            Wait 1
                'FileView2.Reload
        Next
    
    Else 
    'eine Datei löschen
        QUELLPFAD = FileView2.Dir
        QUELLDATEI = FileView2.Current
        Try Loeschen
        Print "Es würde gelöscht werden!"
    Endif 
    TextBox2.Text = ""
    FileView1.Reload
    FileView2.Reload
End 

Public Sub FileView1_KeyPress()
    'Tastenabfrage im linken Feld
    If Key.Code = Key.Return Then FileView1_DblClick()
    If Key.Code = Key.Esc Then Button8_Click()
End

Public Sub FileView2_KeyPress()
    'Tastenabfrage im rechten Feld
    If Key.Code = Key.Return Then FileView2_DblClick()
    If Key.Code = Key.Esc Then Button9_Click()
End

Public Sub Menu48_Click()
    'Schriftart lokal installieren
    If Menu45.Checked = True Then 
         If IsDir(FileView1.Path) = False Then
              If Not Exist("~/.lokal/share/fonts" &/ FileView1.Current) Then
                 Try Copy FileView1.Path To "~/.local/share/fonts" &/ FileView1.Current
              Endif 
         Endif 
         TextLabel1.Text = "SCHRIFTART wurde in das lokale Verzeichnis kopiert."
    Endif 
End


Public Sub TextBox2_KeyPress()
    'Bei Return soll der Pfad geändert werden
    If Key.Code = Key.Return Then 
        If TextBox2.Text = ".." Then FileView2.Dir = User.Home
        If TextBox2.Text = ".." Then TextBox2.Text = ""
        If TextBox2.Text = "." Then FileView2.Dir = User.Home
        If TextBox2.Text = "." Then TextBox2.Text = ""
        FileView2.Dir = FileView2.Dir &/ TextBox2.Text
    Endif
    If Key.Code = Key.Return Then TextLabel3.Text = FileView2.Dir
    'FileView2.Refresh
End

Public Sub Menu49_Click()
    'Zugriff auf externe Datenträger
    If FileView1.HasFocus Then FileView1.Dir = "/media/" & User.Name
    If FileView2.HasFocus Then FileView2.Dir = "/media/" & User.Name Else FileView1.Dir = "/media/" & User.Name
End

Public Sub Button10_Click()
    'Externe Datenträger anzeigen
    Menu49_Click
End

Public Sub TextBox1_KeyPress()
    'Bei Return soll der Pfad geändert werden
    If Key.Code = Key.Return Then 
        If TextBox1.Text = ".." Then FileView1.Dir = User.Home
        If TextBox1.Text = ".." Then TextBox1.Text = ""
        If TextBox1.Text = "." Then FileView1.Dir = User.Home
        If TextBox1.Text = "." Then TextBox1.Text = ""
        FileView1.Dir = FileView1.Dir &/ TextBox1.Text
    Endif
    If Key.Code = Key.Return Then TextLabel4.Text = FileView1.Dir
End

Public Sub TextLabel4_Menu()
    'Terminal mit Pfad öffnen
    Desktop.OpenTerminal(TextLabel4.Text) 
End

Public Sub TextLabel3_Menu()
    'Terminal mit Pfad öffnen
    Desktop.OpenTerminal(TextLabel3.Text)
End


Public Sub TextBox1_GotFocus()
    'Feld weiß machen
    TextBox1.Background = &HFFFFFF
End

Public Sub TextBox1_LostFocus()
    'Feld Farbe wieder ändern
    TextBox1.Background = iHindergrund
End

Public Sub TextBox2_GotFocus()
    'Feld weiß machen
    TextBox2.Background = &HFFFFFF
End

Public Sub TextBox2_LostFocus()
    'Feld Farbe wieder ändern
    TextBox2.Background = iHindergrund
End

Public Sub Menu50_Click()
    'Zip Archiv erstellen
    Funktionen.Einpacken()
    TextLabel1.Text = Funktionen.sInfotext
    FileView1.Reload
    FileView2.Reload
End

Public Sub Menu51_Click()
    ' Datei oder Ordner zerstören und endgültig löschen
    Funktionen.Killen
End

Public Sub Menu55_Click()
    'Computer anzeigen ( über nemo )
    Desktop.UsePortal = False
    Try Desktop.Open("computer:///")
    If Error Then Return 
End

Public Sub Menu56_Click()
    'Fritzbox anzeigen ( über nemo )
    Desktop.UsePortal = False
    Try Desktop.Open("smb://fritz.box/fritz.nas")
    If Error Then Print "Fehler!"
End

Public Sub Menu57_Click()
    'Netzwerk anzeigen ( über nemo )
    Desktop.UsePortal = False
    Try Desktop.Open("network:///")
    If Error Then Return 
End

Public Sub Menu54_Click()
    ' Hilfe Link öffnen
    Desktop.UsePortal = False
    Desktop.Open("https://openyourlinux.blogspot.com/p/lc-der-linux-commander.html")
End

Public Sub Menu31_Click()
    'Textdatei erstellen
    If FileView1.HasFocus Then 
        If Not Exist(FileView1.Dir &/ "text.txt") Then 
            Try Shell "touch " & FileView1.Dir &/ "text.txt" Wait
            TextLabel1.Text = "Eine Datei → text.txt ← wurde erstellt."
        Else
            TextLabel1.Text = "Die Datei → text.txt ← existiert leider schon und wird daher nicht angelegt."
        Endif 
    Endif 
    FileView1.Reload 
    
    If FileView2.HasFocus Then 
        If Not Exist(FileView2.Dir &/ "text.txt") Then 
            Try Shell "touch " & FileView2.Dir &/ "text.txt" Wait
            TextLabel1.Text = "Eine Datei → text.txt ← wurde erstellt."
        Else
            TextLabel1.Text = "Die Datei → text.txt ← existiert leider schon und wird daher nicht angelegt."
        Endif 
    Endif 
    FileView2.Reload
End

Public Sub Button11_Click()
    'Datenträger Button wird nur bei "TreeView aktiv" eingeblendet
    Menu49_Click()
End 

Public Sub Form_State()
    '' Form_State bei Änderung des Zustands
    ' größere Symbole bei Max-Darstellung
    If FMain.Maximized = True Then DirView1.Font.Grade = 2 Else DirView1.Font.Grade = 0 
    If FMain.Maximized = True Then FileView1.IconSize = 128 Else FileView1.IconSize = 64 
    If FMain.Maximized = True Then FileView2.IconSize = 128 Else FileView2.IconSize = 64 
End

Public Sub Form_KeyPress()
    'Versuch die Schriftgröße im Baum anzupassen
    If Key.Code = Key["L"] And If Key.Control Then 
        sLiebling1 = ""
        Menu62.Text = "Liebling"
        sLiebling2 = ""
        Menu63.Text = "Liebling"
        TextLabel1.Text = "Alle Liebling- bzw. Favorit- Belegungen entfernt."
    Endif
    If Key.Code = Key["+"] And If Key.Control Then DirView1.Font.Grade += 1
    If Key.Code = Key["-"] And If Key.Control Then DirView1.Font.Grade -= 1
    Print DirView1.Font.Grade
    DirView1.Refresh
End

'' Orte hinzugefügt -------------------------------------------
Public Sub Menu32_Click()
    ' Bilder Ordner
    FileView1.Dir = User.Home &/ "Bilder"
    DirView1.Current = FileView1.Dir
    DirView1.Reload()
End

Public Sub Menu58_Click()
    ' Dokumente Ordner
    FileView1.Dir = User.Home &/ "Dokumente"
    DirView1.Current = FileView1.Dir
    DirView1.Reload()
End

Public Sub Menu59_Click()
    ' Download Ordner
    FileView1.Dir = User.Home &/ "Downloads"
    DirView1.Current = FileView1.Dir
    DirView1.Reload()
End

Public Sub Menu60_Click()
    ' Musik Ordner
    FileView1.Dir = User.Home &/ "Musik"
    DirView1.Current = FileView1.Dir
    DirView1.Reload()
End

Public Sub Menu61_Click()
    ' Video Ordner
    FileView1.Dir = User.Home &/ "Videos"
    DirView1.Current = FileView1.Dir
    DirView1.Reload()
End
''---------------------------------------------------------------

Public Sub DirView1_DblClick()
    ' Favotitenordner als Liebling hinzufügen
    Dim sAuswahl As String
    sAuswahl = DirView1.Current
    Print sAuswahl
    If Exist(sLiebling1) = True Then 
        If Exist(sLiebling2) = False Then 
            sLiebling2 = sAuswahl 
            Menu63.Text = "Liebling 2: " & sLiebling2
            TextLabel1.Text = "Favorit 2 wurde angelegt."
        Else 
            Select Message.Question("Favoriten 1 & 2 sind bereits vergeben. \nMöchten Sie einen Liebling neu belegen? \n Wählen Sie zum Löschen den entsprechenden Knopf, \nund versuchen Sie Ihre Auswahl noch einmal.", "Lösche Liebling 1", "Lösche Liebling 2", "Abbrechen")
                Case 1
                    sLiebling1 = ""
                    Menu62.Text = "Liebling"
                    TextLabel1.Text = "Favotit 1 gelöscht."
                Case 2
                    sLiebling2 = ""
                    Menu63.Text = "Liebling"
                    TextLabel1.Text = "Favotit 2 gelöscht."
                Case 3
                    Return 
            End Select
        Endif
    Else 
        sLiebling1 = sAuswahl
        FileView1.Dir = sAuswahl 
        Menu62.Text = "Liebling 1: " & sLiebling1
        TextLabel1.Text = "Favorit 1 wurde angelegt."
    Endif 
End

Public Sub Menu62_Click()
    ' gehe zu Favorit 1
    FileView1.Dir = sLiebling1
    DirView1.Current = sLiebling1
    DirView1.Reload()
End

Public Sub Menu63_Click()
    ' gehe zu Favorit 2
    FileView1.Dir = sLiebling2
    DirView1.Current = sLiebling2
    DirView1.Reload
End
